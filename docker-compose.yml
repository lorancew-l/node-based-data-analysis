version: '3.5'

volumes:
  postgres:

services:
  server:
    container_name: server
    restart: always
    build:
      context: ./packages/api
      dockerfile: Dockerfile
    networks:
      - webapp
      - database
    depends_on:
      - postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
      BCRYPT_SALT: ${BCRYPT_SALT}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ACCESS_EXPIRE_TIME: ${JWT_ACCESS_EXPIRE_TIME}
      JWT_REFRESH_EXPIRE_TIME: ${JWT_REFRESH_EXPIRE_TIME}

  client:
    container_name: client
    restart: always
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    networks:
      - webapp
    ports:
      - 80:80

  postgres_db:
    container_name: postgres_db
    restart: always
    image: postgres
    networks:
      - database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
       - postgres:/var/lib/posgresql/data
    ports:
      - 5432:5432

networks:
  webapp:
    driver: bridge
  database:
    driver: bridge